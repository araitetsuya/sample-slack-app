service: my-slack

frameworkVersion: '3'

useDotenv: true

provider:
  name: aws
  stage: dev
  region: ap-northeast-1
  tags:
    service: my-slack
  runtime: nodejs20.x
  timeout: 25
  versionFunctions: false
  environment:
    SLACK_SIGNING_SECRET: ${env:SLACK_SIGNING_SECRET}
    SLACK_BOT_TOKEN: ${env:SLACK_BOT_TOKEN}

  iam:
    role:
      statements:
        - Effect: Allow
          Action:
            - lambda:InvokeFunction
          Resource: {
            Fn::Sub: 'arn:${AWS::Partition}:lambda:${AWS::Region}:${AWS::AccountId}:function:my-slack-dev-bolt'
          }

  httpApi:
    shouldStartNameWithService: true
    disableDefaultEndpoint: true

functions:
  accept:
    handler: app.accept
    events:
      - httpApi:
          method: post
          path: /slack/events
    environment:
      BOLT_LAMBDA_FUNCTION_NAME: {
        Fn::Sub: 'arn:${AWS::Partition}:lambda:${AWS::Region}:${AWS::AccountId}:function:my-slack-dev-bolt'
      }

  bolt:
    handler: app.handler

plugins:
  - serverless-offline